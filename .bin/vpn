#!/bin/sh

OPENVPN_DIR="/etc/openvpn/conf.d"
OPENVPN_EXT=".ovpn"
IFS=""
ARGS="$*"

check_root() {
    if [ "$(id -u)" -ne 0 ]; then
        sudo "$0" "${ARGS}"
        exit $?
    fi
}

print_help() {
    printf "Usage: %s [option]\\n" "$(basename "$0")"
    echo "Options"
    echo "  -c | --connect [server-name]        Connect using given server"
    echo "  -d | --disconnect                   Kill openvpn deamon"
    echo "  -l | --list                         Print config files in conf.d"
    echo "  -h | --help                         Show this message"
    echo "  -s | --status                       Show openvpn daemon status"
    echo
    exit 0
}

list_conf() {
    find "${OPENVPN_DIR}" -name \*${OPENVPN_EXT} -printf '%f\n' \
        | sed "s/${OPENVPN_EXT}//g" | sort | column
    exit 0
}

ip_info() {
    curl -s https://ipv4.ipleak.net/json/ \
        | awk -F '["]' '/"country_code":|"ip":/ {print $(NF-1)}' \
        | xargs printf "Info: %s | %s\n"
}

connect() {
    # Check root privileges
    check_root

    # Check if OpenVPN is already running
    if [ -n "$(pgrep openvpn)" ]; then
        echo "OpenVPN daemon is already running"
        exit 0
    fi

    # Check if config file exists
    if [ ! -f "${OPENVPN_DIR}/$1${OPENVPN_EXT}" ]; then
        echo "Config file does not exist"
        exit 0
    fi

    # Disable IPv6
    sysctl -w net.ipv6.conf.all.disable_ipv6=1 > /dev/null

    # Start OpenVPN
    openvpn --daemon --auth-nocache --cd "${OPENVPN_DIR}" --config "$1""${OPENVPN_EXT}"

    # Display message and exit
    echo "OpenVPN daemon started in background"
    exit 0
}

disconnect() {
    # Check root privileges
    check_root

    # Check if OpenVPN is running
    if [ -n "$(pgrep openvpn)" ]; then
        # Kill daemon
        killall openvpn

        # Re-enable IPv6 and run DHCP
        sysctl -w net.ipv6.conf.all.disable_ipv6=0 > /dev/null

        # Display message and exit
        echo "Disconnected from VPN"
        exit 0
    fi

    echo "OpenVPN daemon is not running"
    exit 0
}

status() {
    if [ -n "$(pgrep openvpn)" ]; then
        printf "OpenVPN daemon is running at %s\n%s\n" "$(pgrep openvpn)" "$(ip_info)"
        exit 0
    fi

    printf "Openvpn daemon is not running\n%s\n" "$(ip_info)"
    exit 0
}

eval set -- "$(getopt -n "$0" -o c:dhls --long "connect,disconnect,help,list,status" -- "$@")"

while true; do
    case "$1" in
        -c | --connect)
            connect "$2"
            shift 2;;
        -d | --disconnect)
            disconnect
            shift 2;;
        -h | --help)
            print_help
            shift 2;;
        -l | --list)
            list_conf
            shift 2;;
        -s | --status)
            status;;
        --) print_help;;
        *) echo Invalid && exit 1;
    esac
done

#!/bin/sh

set -e

NAS_DIR="/media/nas"
NAS_IP="192.168.0.135"
NAS_VOL="volume1"
NAS_HOMES="homes"
USR_NAME="Vince"
IFS=""
ARGS="$*"

check_root() {
    if [ "$(id -u)" -ne 0 ]; then
        sudo "$0" "${ARGS}"
        exit $?
    fi
}

print_help() {
    printf "Usage: %s [option]\\n" "$(basename "$0")"
    echo "Options"
    echo "  -m | --mount [share-name]      Mount a NAS share"
    echo "  -u | --umount [share-name]     Unmount a NAS share. Pass a for all"
    echo "  -h | --help                    Show this message"
    echo "  -s | --status                  Show currently mounted shares"
    echo
    exit 0
}

mount_share() {
    check_root

    if [ "$1" = "home" ]; then
        mount ${NAS_IP}:/${NAS_VOL}/${NAS_HOMES}/${USR_NAME} ${NAS_DIR}/home
        exit 0
    fi

    mount ${NAS_IP}:/${NAS_VOL}/"$1" ${NAS_DIR}/"$1"
    exit 0
}

umount_share() {
    check_root

    SHARES=$(mount | awk '/nas/ {print $3}' | sort)

    if [ -n "${SHARES}" ]; then
        if [ "$1" = "a" ]; then
            for SHARE in $SHARES; do
                umount "${SHARE}"
            done

            printf "Unmounted: %s\\n" "${SHARES}"
            exit 0
        fi

        SHARE=$(mount | grep "$1" | awk '{print $3}' | sort)
        umount "${SHARE}"
        printf "Unmounted: %s\\n" "${SHARE}"
        exit 0
    fi

    echo "Couldn't find a mounted NAS share"
    exit 1
}

status() {
    SHARES=$(mount | awk '/nas/ {print $3}' | sort)
    if [ -n "${SHARES}" ]; then
        printf "Mounted shares:\\n\\n%s\\n" "${SHARES}"
        exit 0
    fi

    printf "No NAS shares are mounted\\n"
    exit 1
}

eval set -- "$(getopt -n "$0" -o m:u:hs --long "mount,umount,help,status" -- "$@")"

while  true; do
    case "$1" in
        -m | --mount)
            mount_share "$2"
            shift 2;;
        -u | --umount)
            umount_share "$2"
            shift 2;;
        -h | --help)
            print_help
            shift 2;;
        -s | --status)
            status;;
        --) print_help;;
        *) echo Invalid && exit 1;
    esac
done
